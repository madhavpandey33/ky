# This workflow will deprecate a specific version from npm registry with a dry run preview
# For more information see: https://docs.npmjs.com/cli/v8/commands/npm-deprecate

name: NPM Deprecate

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Package name (e.g., @mad_devx/ky)'
        required: true
        type: string
        default: '@mad_devx/ky'
      version:
        description: 'Version to deprecate (e.g., 1.1.1)'
        required: true
        type: string
      message:
        description: 'Deprecation message'
        required: true
        type: string
        default: 'This version has been deprecated. Please upgrade to the latest version.'

jobs:
  deprecate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v1
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Display deprecation details
      run: |-
        echo "📦 Package: ${{ github.event.inputs.package_name }}"
        echo "🏷️  Version: ${{ github.event.inputs.version }}"
        echo "💬 Message: ${{ github.event.inputs.message }}"
        echo "👤 Triggered by: ${{ github.actor }}"
        echo "⏰ Timestamp: $(date -u)"
    
    - name: Validate package exists
      run: |-
        VERSION="${{ github.event.inputs.version }}"
        PACKAGE_NAME="${{ github.event.inputs.package_name }}"
        
        echo "🔍 Checking if package exists..."
        
        if npm view "${PACKAGE_NAME}@${VERSION}" version 2>/dev/null; then
          echo "✅ Package ${PACKAGE_NAME}@${VERSION} found"
          echo "📋 Current package info:"
          npm view "${PACKAGE_NAME}@${VERSION}" --json | head -20
        else
          echo "❌ Package ${PACKAGE_NAME}@${VERSION} not found"
          exit 1
        fi
    
    - name: Preview deprecation
      run: |-
        PACKAGE_NAME="${{ github.event.inputs.package_name }}"
        VERSION="${{ github.event.inputs.version }}"
        MESSAGE="${{ github.event.inputs.message }}"
        
        echo "📋 Deprecation Preview"
        echo ""
        echo "The following command will be executed:"
        echo "   npm deprecate \"${PACKAGE_NAME}@${VERSION}\" \"${MESSAGE}\""
        echo ""
        echo "✅ This will mark ${PACKAGE_NAME}@${VERSION} as deprecated"
        echo "✅ Users will see: '${MESSAGE}'"
        echo "✅ The package will still be installable"
        echo ""
        echo "⏳ Waiting 2 minutes before executing deprecation..."
    
    - name: Wait for 2 minutes
      run: |-
        echo "⏳ Starting 2-minute wait period..."
        echo "⏰ Start time: $(date -u)"
        
        # Wait for 2 minutes (120 seconds)
        for i in {1..12}; do
          REMAINING=$((120 - (i - 1) * 10))
          echo "⏱️  ${REMAINING} seconds remaining..."
          sleep 10
        done
        
        echo "⏰ End time: $(date -u)"
        echo "✅ Wait period complete. Proceeding with deprecation..."
    
    - name: Execute deprecation
      run: |-
        PACKAGE_NAME="${{ github.event.inputs.package_name }}"
        VERSION="${{ github.event.inputs.version }}"
        MESSAGE="${{ github.event.inputs.message }}"
        
        echo "🚨 EXECUTING DEPRECATION"
        echo "📦 Deprecating ${PACKAGE_NAME}@${VERSION}..."
        
        npm deprecate "${PACKAGE_NAME}@${VERSION}" "${MESSAGE}"
        
        echo "✅ Successfully deprecated ${PACKAGE_NAME}@${VERSION}"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Verify deprecation
      run: |-
        VERSION="${{ github.event.inputs.version }}"
        PACKAGE_NAME="${{ github.event.inputs.package_name }}"
        
        echo "🔍 Verifying deprecation..."
        echo "⏳ Waiting for npm registry to propagate changes..."
        
        sleep 5
        
        # Check if the package is marked as deprecated
        DEPRECATED_MSG=$(npm view "${PACKAGE_NAME}@${VERSION}" deprecated 2>/dev/null || echo "")
        
        if [ -n "$DEPRECATED_MSG" ]; then
          echo "✅ Confirmed: ${PACKAGE_NAME}@${VERSION} has been deprecated"
          echo "💬 Deprecation message: ${DEPRECATED_MSG}"
        else
          echo "⚠️  Deprecation message not yet visible in npm registry"
          echo "✅ Deprecation command executed successfully, but registry may need time to propagate"
          echo "💡 Try checking manually in a few minutes: npm view ${PACKAGE_NAME}@${VERSION}"
        fi
    
    - name: Summary
      run: |-
        echo "## 📋 Deprecation Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: ${{ github.event.inputs.package_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Message**: ${{ github.event.inputs.message }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Successfully deprecated" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ℹ️  What this means" >> $GITHUB_STEP_SUMMARY
        echo "- The package version is now marked as deprecated" >> $GITHUB_STEP_SUMMARY
        echo "- Users installing it will see the deprecation warning" >> $GITHUB_STEP_SUMMARY
        echo "- The package is still installable and functional" >> $GITHUB_STEP_SUMMARY
        echo "- This action can be reversed by running: \`npm deprecate ${{ github.event.inputs.package_name }}@${{ github.event.inputs.version }} \"\"\`" >> $GITHUB_STEP_SUMMARY